---
- name: Prepare dedicated storage
  community.general.lvol:
    lv: "{{ lvm_loki_lv_name }}"
    size: "{{ lvm_loki_lv_size }}"
    state: present
    thinpool: "{{ lvm_pool_name }}"
    vg: "{{ lvm_vg_name }}"
  when: dedicated_lvs | bool

- name: Format FS of dedicated storage
  community.general.filesystem:
    fstype: "{{ lvm_fs_type }}"
    dev: "/dev/{{ lvm_vg_name }}/{{ lvm_loki_lv_name }}"
  when: dedicated_lvs | bool

- name: Mount dedicated storage
  mount:
    fstype: "{{ lvm_fs_type }}"
    opts: defaults,nodev,nosuid,noexec
    path: "{{ loki_dir }}"
    src: "/dev/mapper/{{ lvm_vg_name }}-{{ lvm_loki_lv_name }}"
    state: mounted
  when: dedicated_lvs | bool

- name: Create system group
  group:
    name: loki
    system: yes

- name: Create system user
  user:
    create_home: no
    group: loki
    home: "{{ loki_dir }}"
    name: loki
    password: '!'
    shell: /sbin/nologin
    system: yes

- name: Manage Loki var directory
  file:
    group: loki
    mode: '0700'
    owner: loki
    path: "{{ loki_dir }}"
    state: directory

- name: Download Loki
  get_url:
   dest: /tmp
   url: "{{ loki_download_url }}"
  register: loki_download

- name: Unpack Loki
  unarchive:
    copy: no
    dest: /usr/local/bin
    group: root
    mode: 0755
    owner: root
    src: "{{ loki_download.dest }}"

- name: Deploy configuration file
  template:
    dest: /etc/loki.yaml
    group: root
    mode: 0644
    owner: root
    src: loki.yaml.j2
  notify:
    - Restart Loki

- name: Deploy Loki systemd service file
  copy:
    dest: /etc/systemd/system/loki.service
    group: root
    mode: '0644'
    owner: root
    src: loki.service
  notify:
    - Restart Loki

- name: Start and enable Loki service
  service:
    enabled: yes
    name: loki
    state: started
